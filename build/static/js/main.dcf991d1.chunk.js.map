{"version":3,"sources":["App.js","config/routes.js","store/selectors.js","store/action-types.js","store/actions.js","history.js","components/groupsInfo/allGroups.jsx","components/groupsInfo/sortedGroups.jsx","components/navPanel/groupsNav.jsx","components/portal/portal.jsx","components/popup/popup.jsx","store/reducers/index.js","mocks/groups.js","store/store.js","components/popup/popupAddLink.jsx","components/searchBar/searchBar.jsx","components/pages/layout.jsx","routes.jsx","index.js"],"names":["App","children","className","routeConfig","INDEX","groupListSelector","state","groupList","filterLinksSelector","createSelector","filterParam","groups","sortedArr","Object","keys","map","key","links","list","filter","item","name","toLowerCase","includes","push","console","log","ActionType","ActionCreator","link","type","payload","history","createBrowserHistory","AllGroups","props","sort","content","elem","href","Groups","id","useParams","NavLinks","useSelector","to","i","data-index","Portal","parent","el","React","useMemo","document","createElement","useEffect","target","appendChild","body","classList","split","forEach","add","removeChild","ReactDOM","createPortal","Backdrop","styled","div","Content","Popup","useState","active","setActive","open","onClose","locked","backdrop","useRef","current","transitionEnd","keyHandler","e","indexOf","which","clickHandler","addEventListener","window","setTimeout","activeElement","blur","querySelector","setAttribute","removeEventListener","removeAttribute","Fragment","ref","initialState","error","existingGroups","localStorage","getItem","JSON","parse","parsedGroups","group","getInitialGroups","composeEnhancers","compose","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","sagaMiddleware","createSagaMiddleware","store","createStore","action","applyMiddleware","AddLink","isOpen","setIsOpen","Input","input","Select","select","dispatch","useDispatch","onSubmit","useCallback","setItem","stringify","saveToLocalStorage","value","preventDefault","onClick","placeholder","optionState","SearchBar","onChange","Layout","filterLinks","WrappedComponent","Component","exact","path","component","render","StrictMode","routes","getElementById"],"mappings":"wOAEaA,G,MAAM,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpB,OACE,yBAAKC,UAAU,aACb,0BAAMA,UAAU,2BAA2BD,MCFlCE,EAHK,CAChBC,MAAO,K,8BCEEC,EAAoB,SAACC,GAAD,OAAWA,EAAMC,WAIrCC,EAAsBC,YAC/BJ,GAH+B,SAACC,GAAD,OAAWA,EAAMI,eAKhD,SAACC,EAAQD,GACL,IAAME,EAAY,GAelB,OAbAC,OAAOC,KAAKH,GAAQI,KAAI,SAACC,GACrB,IAAMC,EAAQN,EAAOK,GAAKE,KAAKC,QAAO,SAACC,GACnC,OAAOA,EAAKC,KAAKC,cAAcC,SAASb,EAAYY,kBAGxDV,EAAUY,KAAV,2BACOb,EAAOK,IADd,IAEIE,KAAK,YACED,SAIfQ,QAAQC,IAAId,GACLA,KCzBFe,EAGD,WAHCA,EAIG,eCFHC,EAKA,SAACC,GAAD,MAAW,CAChBC,KAAMH,EACNI,QAASF,IAPJD,EASI,SAACT,GAAD,MAAa,CACtBW,KAAMH,EACNI,QAASZ,I,OCZJa,EAAUC,c,QCAVC,EAAY,SAACC,GACtB,IAAMxB,EAASwB,EAAMC,KAAKC,QAG1B,OACI,oCAES1B,EAAQI,KAAI,SAACK,GAAD,OACRA,EAAMF,KAAKH,KAAI,SAACuB,GAAD,OACZ,oCACI,yBAAKpC,UAAU,cAAcoC,EAAKjB,KAAlC,MAA0C,uBAAGkB,KAAM,UAAYD,EAAKT,MAA1B,kDCHzDW,EAAS,SAACL,GAAW,IACxBM,EAAOC,cAAPD,GAGN,OAFAhB,QAAQC,IAAIS,EAAME,SAGd,oCACKI,EACIN,EAAME,QAAStB,KAAI,SAACK,GACjB,GAAIA,EAAKC,MAAQoB,EACb,OAAOrB,EAAKF,KAAKH,KAAI,SAACuB,GAAD,OACjB,oCACI,yBAAKpC,UAAU,cAAcoC,EAAKjB,KAAlC,MAA0C,uBAAGkB,KAAM,UAAYD,EAAKT,MAA1B,gDAMxD,kBAAC,EAAD,CAAWO,KAAMD,MChBtBQ,EAAW,WACpB,IAAMhC,EAASiC,YAAYvC,GAC3B,OACI,yBAAKH,UAAU,OACX,kBAAC,IAAD,CACIA,UAAU,YACV2C,GAAI,KAFR,8CAIChC,OAAOC,KAAKH,GAAQI,KAAI,SAACC,EAAK8B,GAAN,OACrB,oCACI,kBAAC,IAAD,CACI5C,UAAU,YACV6C,aAAYD,EACZD,GAAI,UAAYlC,EAAOK,GAAKK,MAE3BV,EAAOK,GAAKK,Y,8BCtBtB,SAAS2B,EAAT,GAAkD,IAAhC/C,EAA+B,EAA/BA,SAAUgD,EAAqB,EAArBA,OAAQ/C,EAAa,EAAbA,UAC3CgD,EAAKC,IAAMC,SAAQ,kBAAMC,SAASC,cAAc,SAAQ,IAW9D,OAVAH,IAAMI,WAAU,WACd,IAAMC,EAASP,GAAUA,EAAOQ,YAAcR,EAASI,SAASK,KAC1DC,EAAY,CAAC,oBAInB,OAHIzD,GAAWA,EAAU0D,MAAM,KAAKC,SAAQ,SAACzC,GAAD,OAAUuC,EAAUnC,KAAKJ,MACrEuC,EAAUE,SAAQ,SAACzC,GAAD,OAAU8B,EAAGS,UAAUG,IAAI1C,MAC7CoC,EAAOC,YAAYP,GACZ,WACLM,EAAOO,YAAYb,MAEpB,CAACA,EAAID,EAAQ/C,IACT8D,IAASC,aAAahE,EAAUiD,G,gmCCTzC,IAAMgB,EAAWC,IAAOC,IAAV,KAmCRC,EAAUF,IAAOC,IAAV,KAaE,SAASE,EAAMnC,GAAQ,IAAD,EACLgB,IAAMoB,UAAS,GADV,mBAC1BC,EAD0B,KAClBC,EADkB,KAEzBC,EAA0BvC,EAA1BuC,KAAMC,EAAoBxC,EAApBwC,QAASC,EAAWzC,EAAXyC,OACjBC,EAAW1B,IAAM2B,OAAO,MAoC9B,OAlCA3B,IAAMI,WAAU,WAAO,IACXwB,EAAYF,EAAZE,QAEFC,EAAgB,kBAAMP,EAAUC,IAEhCO,EAAa,SAAAC,GAAC,OAAKN,GAAU,CAAC,IAAIO,QAAQD,EAAEE,QAAU,GAAKT,KAE3DU,EAAe,SAAAH,GAAC,OAAKN,GAAUM,EAAE1B,SAAWuB,GAAWJ,KAgB7D,OAdII,IACAA,EAAQO,iBAAiB,gBAAiBN,GAC1CD,EAAQO,iBAAiB,QAASD,GAClCE,OAAOD,iBAAiB,QAASL,IAGjCP,GACAa,OAAOC,YAAW,WACdnC,SAASoC,cAAcC,OACvBjB,EAAUC,GACVrB,SAASsC,cAAc,SAASC,aAAa,QAAS,UACvD,IAGA,WACCb,IACAA,EAAQc,oBAAoB,gBAAiBb,GAC7CD,EAAQc,oBAAoB,QAASR,IAGzChC,SAASsC,cAAc,SAASG,gBAAgB,SAChDP,OAAOM,oBAAoB,QAASZ,MAEzC,CAACP,EAAME,EAAQD,IAGd,kBAAC,IAAMoB,SAAP,MACMrB,GAAQF,IACN,kBAACxB,EAAD,CAAQ9C,UAAU,gBACd,kBAACgE,EAAD,CAAU8B,IAAKnB,EAAU3E,UAAWsE,GAAUE,GAAQ,UAClD,kBAACL,EAAD,CAASnE,UAAU,iBAAiBiC,EAAMlC,a,oBC1E5DgG,EAAe,CACnBC,MAAO,GACP3F,UAtBuB,SAACI,GACxB,IAAMwF,EAAiBC,aAAaC,QAAQ,aAC5C,OAAKF,GACgBG,KAAKC,MAAMJ,GAEnBtC,SAAQ,SAAC2C,GACpB7F,EAAO6F,EAAaC,OAApB,2BACK9F,EAAO6F,EAAaC,QADzB,IAEEvF,KAAK,GAAD,mBACCP,EAAO6F,EAAaC,OAAOvF,MAD5B,gBAGGsF,EAAa3E,aAMjBlB,GAfqBA,EAoBjB+F,CC1BS,CAClB,WAAc,CACV,KAAQ,aACR,KAAQ,CACJ,CACIrF,KAAM,mBACNQ,KAAM,wBAEV,CACIR,KAAM,UACNQ,KAAM,wBAEV,CACIR,KAAM,cACNQ,KAAM,0BAIlB,SAAY,CACR,KAAQ,WACR,KAAQ,CACJ,CACIR,KAAM,+DACNQ,KAAM,wBAEV,CACIR,KAAM,gBACNQ,KAAM,wBAEV,CACIR,KAAM,SACNQ,KAAM,0BAIlB,eAAkB,CACd,KAAQ,iBACR,KAAQ,CACJ,CACIR,KAAM,mBACNQ,KAAM,wBAEV,CACIR,KAAM,YACNQ,KAAM,wBAEV,CACIR,KAAM,wCACNQ,KAAM,0BAIlB,MAAS,CACL,KAAQ,QACR,KAAQ,CACJ,CACIR,KAAM,UACNQ,KAAM,wBAEV,CACIR,KAAM,UACNQ,KAAM,wBAEV,CACIR,KAAM,kBACNQ,KAAM,4BDtCpBnB,YAAa,I,WEtBTiG,EAAqC,qBAAXpB,OAAyBqB,IAAUrB,OAAOsB,sCAAwCD,IAE5GE,EAAiBC,cASRC,EARDC,aFsBC,WAAmD,IAA/B3G,EAA8B,uDAAtB2F,EAAciB,EAAQ,uCAC/D,OAAQA,EAAOpF,MACb,KAAKH,EAAL,IACUI,EAAYmF,EAAZnF,QACR,OAAO,2BACFzB,GADL,IAEEC,UAAU,2BACLD,EAAMC,WADF,kBAENwB,EAAQ0E,MAAQ,CACfpF,KAAMU,EAAQ0E,MACdvF,KAAK,GAAD,mBAAMZ,EAAMC,UAAUwB,EAAQ0E,OAAOvF,MAArC,gBAAgDa,EAAQF,aAIpE,KAAKF,EACH,OAAO,2BACFrB,GADL,IAEEI,YAAawG,EAAOnF,UAExB,QAAS,OAAOzB,KEvChBqG,EAAiBQ,YAAgBL,K,uZCD9B,IAAMM,EAAU,WAAO,IAAD,EAEGjE,IAAMoB,UAAS,GAFlB,mBAElB8C,EAFkB,KAEVC,EAFU,KAGnBC,EAAQpD,IAAOqD,MAAV,KAOLC,EAAStD,IAAOuD,OAAV,KAkBZ,IAAMrG,EAAOyD,iBAAO,MACdjD,EAAOiD,iBAAO,MACd2B,EAAQ3B,iBAAO,MAEf6C,EAAWC,cAEXC,EAAWC,uBAAY,SAAC5C,GAoB1B,OAlCJ,SAA4B9D,GACxB,IAAI+E,EAAiBG,KAAKC,MAAMH,aAAaC,QAAQ,cAC/B,MAAlBF,IAAwBA,EAAiB,IAC7CA,EAAe3E,KAAKJ,GACpBgF,aAAa2B,QAAQ,YAAazB,KAAK0B,UAAU7B,IAkBjD8B,CAPe,CACXxB,MAAOA,EAAM1B,QAAQmD,MACrBrG,KAAM,CACFR,KAAMA,EAAK0D,QAAQmD,MACnBrG,KAAMA,EAAKkD,QAAQmD,SAI3BhD,EAAEiD,iBACFR,EAAS/F,EAAsB,CAC3B6E,MAAOA,EAAM1B,QAAQmD,MACrBrG,KAAM,CACFR,KAAMA,EAAK0D,QAAQmD,MACnBrG,KAAMA,EAAKkD,QAAQmD,UAG3B7G,EAAK0D,QAAQmD,MAAQ,GACrBrG,EAAKkD,QAAQmD,MAAQ,IAEd,IACR,CAACP,EAAUtG,EAAMQ,EAAM4E,IAI1B,OACI,oCACI,4BACI2B,QAAS,WACLd,GAAU,KAFlB,oDAOA,kBAAChD,EAAD,CACIK,QAAS,WACL2C,GAAU,IAEd5C,KAAM2C,GAEN,0BAAMnH,UAAU,gBAAgB2H,SAAUA,GACtC,kBAACN,EAAD,CAAOc,YAAY,mDAAWvG,KAAK,OAAOkE,IAAK3E,IAC/C,kBAACkG,EAAD,CAAOc,YAAY,uCAASvG,KAAK,OAAOkE,IAAKnE,IAC7C,kBAAC4F,EAAD,CAAQS,WApBpBI,EAoBwCtC,IAAKS,GAC7B,4BAAQyB,MAAM,cAAd,cACA,4BAAQA,MAAM,kBAAd,kBACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,SAAd,UAEJ,qFAEJ,4BACIE,QAAS,WACLd,GAAU,KAFlB,iDC1FHiB,EAAY,WACrB,IAAMZ,EAAWC,cACjB,GAAIhG,GAA0D,MAA7BA,EAC7B,OACI,yBAAK1B,UAAU,UACX,0BAAMA,UAAU,iBACZ,2BACI4B,KAAK,OACLuG,YAAY,SACZG,SAAU,SAAAtD,GAAC,OAAIyC,EAAS/F,EAA0BsD,EAAE1B,OAAO0E,cCFtEO,EAAS,WAClB,IAAMC,EAAc9F,YAAYpC,GAEhC,OACI,yBAAKN,UAAU,gBACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAQmC,QAASqG,MCbvBC,EAAmB,SAACC,GAAD,OAAe,kBACpC,kBAAC,EAAD,KACI,kBAACA,EAAD,SAKJ,oBAAC,IAAD,KACI,kBAAC,IAAD,CACIC,OAAO,EACPC,KAAM3I,EAAYC,MAClB2I,UAAWJ,EAAiBF,KAGhC,kBAAC,IAAD,CACII,OAAO,EACPC,KAAK,aACLC,UAAWJ,EAAiBF,MCVxCzE,IAASgF,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAa,CAAEjC,SACd,kBAAC,IAAW,CAAEhF,WACXkH,KAIP7F,SAAS8F,eAAe,W","file":"static/js/main.dcf991d1.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nexport const App = ({ children }) => {\n  return (\n    <div className=\"app block\">\n      <main className=\"app__inner block__inner\">{children}</main>\n    </div>\n  );\n}\n\nexport default App;\n","const routeConfig = {\r\n    INDEX: \"/\",\r\n}\r\nexport default routeConfig;","import { createSelector } from 'reselect';\n\n\nexport const groupListSelector = (state) => state.groupList;\n\nexport const filterParamSelector = (state) => state.filterParam;\n\nexport const filterLinksSelector = createSelector(\n    groupListSelector,\n    filterParamSelector,\n    (groups, filterParam) => {\n        const sortedArr = [];\n\n        Object.keys(groups).map((key) => {\n            const links = groups[key].list.filter((item) => {\n                return item.name.toLowerCase().includes(filterParam.toLowerCase());\n            })\n\n            sortedArr.push({\n                ...groups[key],\n                list: [\n                    ...links,\n                ],\n            });\n        });\n        console.log(sortedArr)\n        return sortedArr;\n    }\n);","/* eslint-disable */\nexport const ActionType = {\n  FETCH_INITIAL_DATA: 'FETCH_INITIAL_DATA',\n  SET_GROUP_LIST: 'SET_GROUP_LIST',\n  ADD_LINK: 'ADD_LINK',\n  FILTER_LINKS: 'FILTER_LINKS'\n}","import { ActionType } from './action-types';\n\n// Передача данных в стор \nexport const ActionCreator = {\n    setGroupList: (groups) => ({\n        type: ActionType.SET_GROUP_LIST,\n        payload: groups\n    }),\n    addLink: (link) => ({\n        type: ActionType.ADD_LINK,\n        payload: link\n    }),\n    filterLinks: (filter) => ({\n        type: ActionType.FILTER_LINKS,\n        payload: filter\n    }),\n\n};\n","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory()","import React, { useState, useEffect, useCallback } from 'react';\r\n\r\nexport const AllGroups = (props) => {\r\n    const groups = props.sort.content;\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                (groups).map((item) => (\r\n                    (item).list.map((elem) => (\r\n                        <>\r\n                            <div className=\"link__name\">{elem.name} - <a href={\"http://\" + elem.link}>Ссылка</a></div>\r\n                        </>\r\n                    ))\r\n\r\n                ))\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { ActionCreator } from \"../../store/actions\"\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { history } from '../../history.js'\r\nimport { useParams } from \"react-router-dom\";\r\nimport { groupListSelector } from '../../store/selectors'\r\nimport { AllGroups } from './allGroups'\r\nimport { groups } from '../../mocks/groups';\r\n\r\nexport const Groups = (props) => {\r\n    let { id } = useParams();\r\n    console.log(props.content);\r\n\r\n    return (\r\n        <>\r\n            {id ?\r\n                (props.content).map((item) => {\r\n                    if (item.name == id) {\r\n                        return item.list.map((elem) => (\r\n                            <>\r\n                                <div className=\"link__name\">{elem.name} - <a href={\"http://\" + elem.link}>Ссылка</a></div>\r\n                            </>\r\n                        ))\r\n                    }\r\n                }\r\n                )\r\n                : <AllGroups sort={props} />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { ActionCreator } from \"../../store/actions\"\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { history } from '../../history.js'\r\nimport { groupListSelector } from '../../store/selectors'\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport { Groups } from '../groupsInfo/sortedGroups'\r\nimport routeConfig from '../../config/routes';\r\n\r\n\r\nexport const NavLinks = () => {\r\n    const groups = useSelector(groupListSelector)\r\n    return (\r\n        <div className=\"nav\">\r\n            <Link\r\n                className=\"nav__item\"\r\n                to={'/'}\r\n            >Главная</Link>\r\n            {Object.keys(groups).map((key, i) => (\r\n                <>\r\n                    <Link\r\n                        className=\"nav__item\"\r\n                        data-index={i}\r\n                        to={'/group/' + groups[key].name}\r\n                    >\r\n                        {groups[key].name}\r\n                    </Link>\r\n                </>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nexport default function Portal({ children, parent, className }) {\r\n  const el = React.useMemo(() => document.createElement(\"div\"), []);\r\n  React.useEffect(() => {\r\n    const target = parent && parent.appendChild ? parent : document.body;\r\n    const classList = [\"portal-container\"];\r\n    if (className) className.split(\" \").forEach((item) => classList.push(item));\r\n    classList.forEach((item) => el.classList.add(item));\r\n    target.appendChild(el);\r\n    return () => {\r\n      target.removeChild(el);\r\n    };\r\n  }, [el, parent, className]);\r\n  return ReactDOM.createPortal(children, el);\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport \"wicg-inert\";\r\n\r\nimport Portal from \"../portal/portal\";\r\n\r\nconst Backdrop = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  background-color: rgba(51, 51, 51, 0.3);\r\n  backdrop-filter: blur(1px);\r\n  opacity: 0;\r\n  transition: all 100ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  transition-delay: 200ms;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  & .modal-content {\r\n    transform: translateY(100px);\r\n    transition: all 200ms cubic-bezier(0.4, 0, 0.2, 1);\r\n    opacity: 0;\r\n  }\r\n\r\n  &.active {\r\n    transition-duration: 250ms;\r\n    transition-delay: 0ms;\r\n    opacity: 1;\r\n\r\n    & .modal-content {\r\n      transform: translateY(0);\r\n      opacity: 1;\r\n      transition-delay: 150ms;\r\n      transition-duration: 350ms;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Content = styled.div`\r\n  position: relative;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  min-height: 50px;\r\n  min-width: 50px;\r\n  max-height: 80%;\r\n  max-width: 80%;\r\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n  background-color: white;\r\n  border-radius: 2px;\r\n`;\r\n\r\nexport default function Popup(props) {\r\n    const [active, setActive] = React.useState(false);\r\n    const { open, onClose, locked } = props;\r\n    const backdrop = React.useRef(null);\r\n\r\n    React.useEffect(() => {\r\n        const { current } = backdrop;\r\n\r\n        const transitionEnd = () => setActive(open);\r\n\r\n        const keyHandler = e => !locked && [27].indexOf(e.which) >= 0 && onClose();\r\n\r\n        const clickHandler = e => !locked && e.target === current && onClose();\r\n\r\n        if (current) {\r\n            current.addEventListener(\"transitionend\", transitionEnd);\r\n            current.addEventListener(\"click\", clickHandler);\r\n            window.addEventListener(\"keyup\", keyHandler);\r\n        }\r\n\r\n        if (open) {\r\n            window.setTimeout(() => {\r\n                document.activeElement.blur();\r\n                setActive(open);\r\n                document.querySelector(\"#root\").setAttribute(\"inert\", \"true\");\r\n            }, 10);\r\n        }\r\n\r\n        return () => {\r\n            if (current) {\r\n                current.removeEventListener(\"transitionend\", transitionEnd);\r\n                current.removeEventListener(\"click\", clickHandler);\r\n            }\r\n\r\n            document.querySelector(\"#root\").removeAttribute(\"inert\");\r\n            window.removeEventListener(\"keyup\", keyHandler);\r\n        };\r\n    }, [open, locked, onClose]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {(open || active) && (\r\n                <Portal className=\"modal-portal\">\r\n                    <Backdrop ref={backdrop} className={active && open && \"active\"}>\r\n                        <Content className=\"modal-content\">{props.children}</Content>\r\n                    </Backdrop>\r\n                </Portal>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import { ActionType } from '../action-types';\nimport { groups } from '../../mocks/groups';\n\n\nconst getInitialGroups = (groups) => {\n  const existingGroups = localStorage.getItem(\"allGroups\");\n  if (!existingGroups) return groups;\n  const parsedGroups = JSON.parse(existingGroups);\n\n  parsedGroups.forEach((parsedGroups) => {\n    groups[parsedGroups.group] = {\n      ...groups[parsedGroups.group],\n      list: [\n        ...groups[parsedGroups.group].list,\n        {\n          ...parsedGroups.link\n        }\n      ]\n    }\n  });\n\n  return groups;\n};\n\nconst initialState = {\n  error: '',\n  groupList: getInitialGroups(groups),\n  filterParam: ''\n};\n\nexport default function appReducer(state = initialState, action) {\n  switch (action.type) {\n    case ActionType.ADD_LINK:\n      const { payload } = action;\n      return {\n        ...state,\n        groupList: {\n          ...state.groupList,\n          [payload.group]: {\n            name: payload.group,\n            list: [...state.groupList[payload.group].list, { ...payload.link }]\n          }\n        }\n      }\n    case ActionType.FILTER_LINKS:\n      return {\n        ...state,\n        filterParam: action.payload\n      }\n    default: return state;\n  }\n}","export const groups = {\r\n    \"architects\": {\r\n        \"name\": \"architects\",\r\n        \"list\": [\r\n            {\r\n                name: \"Dead butterflies\",\r\n                link: \"youtu.be/2ZmjG3wuUes\"\r\n            },\r\n            {\r\n                name: \"Animals\",\r\n                link: \"youtu.be/jdWhJcrrjQs\"\r\n            },\r\n            {\r\n                name: \"Black Lungs\",\r\n                link: \"youtu.be/W69ow97hqbI\"\r\n            }\r\n        ]\r\n    },\r\n    \"wildways\": {\r\n        \"name\": \"wildways\",\r\n        \"list\": [\r\n            {\r\n                name: \"ялюблютебя\",\r\n                link: \"youtu.be/UQ0lulHee_8\"\r\n            },\r\n            {\r\n                name: \"Event Horizon\",\r\n                link: \"youtu.be/Ib8g_4C3Wfk\"\r\n            },\r\n            {\r\n                name: \"Havana\",\r\n                link: \"youtu.be/0zUAsxow83s\"\r\n            }\r\n        ]\r\n    },\r\n    \"arctic_monkeys\": {\r\n        \"name\": \"arctic_monkeys\",\r\n        \"list\": [\r\n            {\r\n                name: \"Do I Wanna Know?\",\r\n                link: \"youtu.be/bpOSxM0rNPM\"\r\n            },\r\n            {\r\n                name: \"R U Mine?\",\r\n                link: \"youtu.be/VQH8ZTgna3Q\"\r\n            },\r\n            {\r\n                name: \"Why You Only Call Me When Youre High?\",\r\n                link: \"youtu.be/6366dxFf-Os\"\r\n            }\r\n        ]\r\n    },\r\n    \"deuce\": {\r\n        \"name\": \"deuce\",\r\n        \"list\": [\r\n            {\r\n                name: \"The One\",\r\n                link: \"youtu.be/99PvjovUYK0\"\r\n            },\r\n            {\r\n                name: \"America\",\r\n                link: \"youtu.be/-0kuosykX4g\"\r\n            },\r\n            {\r\n                name: \"I Came to Party\",\r\n                link: \"youtu.be/yxczdxs-fmw\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n","import createSagaMiddleware from 'redux-saga';\r\nimport rootReducer from './reducers';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\n\r\n// Components\r\nconst composeEnhancers = typeof window === 'undefined' ? compose : window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(sagaMiddleware))\r\n);\r\n\r\n\r\n\r\n\r\nexport default store;","import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { ActionCreator } from \"../../store/actions\"\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { history } from '../../history.js'\r\nimport Popup from './popup'\r\nimport styled from 'styled-components';\r\nimport store from '../../store/store'\r\n\r\nexport const AddLink = () => {\r\n\r\n    const [isOpen, setIsOpen] = React.useState(false);\r\n    const Input = styled.input`\r\n    border-radius: 3px;\r\n    border: 1px solid green;\r\n    display: block;\r\n    margin: 0 0 1em;\r\n    padding: 10px;\r\n    `\r\n    const Select = styled.select`\r\n    display: block:\r\n    border-radius: 3px;\r\n    border: 1px solid green;\r\n    display: block;\r\n    padding: 10px;\r\n    margin: 0 0 1em;\r\n    `\r\n\r\n\r\n    function saveToLocalStorage(item) {\r\n        var existingGroups = JSON.parse(localStorage.getItem(\"allGroups\"));\r\n        if (existingGroups == null) existingGroups = [];\r\n        existingGroups.push(item);\r\n        localStorage.setItem(\"allGroups\", JSON.stringify(existingGroups));\r\n    }\r\n\r\n\r\n    const name = useRef(null);\r\n    const link = useRef(null);\r\n    const group = useRef(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = useCallback((e) => {\r\n        var newGroup = {\r\n            group: group.current.value,\r\n            link: {\r\n                name: name.current.value,\r\n                link: link.current.value\r\n            }\r\n        }\r\n        saveToLocalStorage(newGroup)\r\n        e.preventDefault();\r\n        dispatch(ActionCreator.addLink({\r\n            group: group.current.value,\r\n            link: {\r\n                name: name.current.value,\r\n                link: link.current.value\r\n            }\r\n        }));\r\n        name.current.value = '';\r\n        link.current.value = '';\r\n\r\n        return false;\r\n    }, [dispatch, name, link, group]);\r\n\r\n    var optionState;\r\n\r\n    return (\r\n        <>\r\n            <button\r\n                onClick={() => {\r\n                    setIsOpen(true);\r\n                }}\r\n            >\r\n                Добавить\r\n            </button>\r\n            <Popup\r\n                onClose={() => {\r\n                    setIsOpen(false);\r\n                }}\r\n                open={isOpen}\r\n            >\r\n                <form className=\"form__addLink\" onSubmit={onSubmit}>\r\n                    <Input placeholder=\"Название\" type=\"name\" ref={name} />\r\n                    <Input placeholder=\"Ссылка\" type=\"text\" ref={link} />\r\n                    <Select value={optionState} ref={group}>\r\n                        <option value=\"architects\">Architects</option>\r\n                        <option value=\"arctic monkeys\">Arctic monkeys</option>\r\n                        <option value=\"wildways\">Wildways</option>\r\n                        <option value=\"deuce\">Deuce</option>\r\n                    </Select>\r\n                    <button>Добавить</button>\r\n                </form>\r\n                <button\r\n                    onClick={() => {\r\n                        setIsOpen(false);\r\n                    }}\r\n                >\r\n                    Закрыть\r\n                </button>\r\n            </Popup>\r\n        </>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ActionCreator } from \"../../store/actions\"\r\n\r\nexport const SearchBar = () => {\r\n    const dispatch = useDispatch();\r\n    if (ActionCreator.filterLinks && ActionCreator.filterLinks != null) {\r\n        return (\r\n            <div className=\"search\">\r\n                <form className=\"search--input\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Search\"\r\n                        onChange={e => dispatch(ActionCreator.filterLinks(e.target.value))}\r\n                    />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { filterLinksSelector, groupListSelector } from '../../store/selectors'\r\nimport { NavLinks } from '../navPanel/groupsNav'\r\nimport { Groups } from '../groupsInfo/sortedGroups'\r\nimport { AddLink } from '../popup/popupAddLink'\r\nimport { SearchBar } from '../searchBar/searchBar'\r\n\r\n\r\n\r\n\r\nexport const Layout = () => {\r\n    const filterLinks = useSelector(filterLinksSelector);\r\n\r\n    return (\r\n        <div className=\"block__inner\">\r\n            <SearchBar />\r\n            <AddLink />\r\n            <NavLinks />\r\n            <Groups content={filterLinks} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport { App } from './App';\r\nimport routeConfig from './config/routes';\r\nimport { Layout } from './components/pages/layout';\r\n\r\nconst WrappedComponent = (Component) => () => (\r\n    <App>\r\n        <Component />\r\n    </App>\r\n);\r\n\r\nexport default (\r\n    <Switch>\r\n        <Route\r\n            exact={true}\r\n            path={routeConfig.INDEX}\r\n            component={WrappedComponent(Layout)}\r\n\r\n        />\r\n        <Route\r\n            exact={true}\r\n            path=\"/group/:id\"\r\n            component={WrappedComponent(Layout)}\r\n        />\r\n    </Switch>\r\n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport routes from './routes';\nimport { Router } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport { history } from './history.js'\nimport store from './store/store'\n\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider {...{ store }}>\n      <Router {...{ history }}>\n        {routes}\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}